

  The DepVars sample component
    ✓ should render a depVar for each depVarId
    ✓ should render an input field for each indDepVar
Connect {
  props: 
   { store: 
      { subscribe: [Function: subscribe],
        dispatch: [Function: dispatch],
        getState: [Function: getState] },
     params: { expid: 'q', sampleid: 's' } },
  context: { store: undefined },
  refs: {},
  updater: 
   { isMounted: [Function],
     enqueueCallback: [Function],
     enqueueCallbackInternal: [Function],
     enqueueForceUpdate: [Function],
     enqueueReplaceState: [Function],
     enqueueSetState: [Function],
     enqueueSetProps: [Function],
     enqueueSetPropsInternal: [Function],
     enqueueReplaceProps: [Function],
     enqueueReplacePropsInternal: [Function],
     enqueueElementInternal: [Function] },
  version: 0,
  store: 
   { subscribe: [Function: subscribe],
     dispatch: [Function: dispatch],
     getState: [Function: getState] },
  stateProps: Object { depVars: [ 'x', 'y', 'z' ], indVars: [ [Object], [Object] ] },
  dispatchProps: { dispatch: [Function: dispatch] },
  state: { storeState: { Experiments: [Object], Samples: [Object] } },
  nextState: 
   { store: 
      { subscribe: [Function: subscribe],
        dispatch: [Function: dispatch],
        getState: [Function: getState] },
     params: { expid: 'q', sampleid: 's' },
     depVars: [ 'x', 'y', 'z' ],
     indVars: [ [Object], [Object] ],
     dispatch: [Function: dispatch] },
  _reactInternalInstance: 
   { _currentElement: 
      { '$$typeof': Symbol(react.element),
        type: [Object],
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} },
     _rootNodeID: '.t0l9envym8',
     _instance: [Circular],
     _pendingElement: null,
     _pendingStateQueue: null,
     _pendingReplaceState: false,
     _pendingForceUpdate: false,
     _renderedComponent: 
      { _currentElement: [Object],
        _rootNodeID: '.t0l9envym8',
        _instance: [Object],
        _pendingElement: null,
        _pendingStateQueue: null,
        _pendingReplaceState: false,
        _pendingForceUpdate: false,
        _renderedComponent: [Object],
        _context: [Object],
        _mountOrder: 15,
        _topLevelWrapper: null,
        _pendingCallbacks: null,
        _mountIndex: 0,
        _mountImage: null,
        _isOwnerNecessary: false,
        _warnedAboutRefsInRender: false },
     _context: { '__validateDOMNesting_ancestorInfo$jz0vhm5zkubfyldi': [Object] },
     _mountOrder: 14,
     _topLevelWrapper: 
      { _currentElement: [Object],
        _rootNodeID: '.t0l9envym8',
        _instance: [Object],
        _pendingElement: null,
        _pendingStateQueue: null,
        _pendingReplaceState: false,
        _pendingForceUpdate: false,
        _renderedComponent: [Circular],
        _context: [Object],
        _mountOrder: 13,
        _topLevelWrapper: null,
        _pendingCallbacks: null,
        _mountIndex: 0,
        _mountImage: null,
        _isOwnerNecessary: false,
        _warnedAboutRefsInRender: false },
     _pendingCallbacks: null,
     _mountIndex: 0,
     _mountImage: null,
     _isOwnerNecessary: false,
     _warnedAboutRefsInRender: false },
  unsubscribe: {} }
    ✓ go to next sample page


  3 passing (92ms)

